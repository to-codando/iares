{
  "version": 3,
  "sources": ["../../../../src/factories/createChain/index.ts", "../../../../src/utils/index.ts", "../../../../src/validators/template/index.ts", "../../../../src/render/index.ts", "../../../../src/actions/template/renderTemplateArray.ts", "../../../../src/actions/template/renderChildren.ts", "../../../../src/state/createState.ts", "../../../../../../node_modules/.pnpm/htm@3.1.1/node_modules/htm/dist/htm.module.js", "../../../../src/template/html.ts", "../../../../src/style/createHash.ts", "../../../../src/style/createStyleElement.ts", "../../../../src/style/cssParser.ts", "../../../../src/style/css.ts", "../../../../src/actions/template/setElementAttributes.ts", "../../../../src/actions/template/createElementByFactoryName.ts", "../../../../src/actions/template/createElementByTagName.ts", "../../../../src/actions/template/renderTemplateData.ts", "../../../../src/actions/template/renderTemplateObject.ts"],
  "sourcesContent": ["import type { ChainLink } from \"./types\";\n\nexport const createChain = () => {\n  const _chain = new Set<ChainLink<unknown>>();\n\n  const add = <T>(chainLink: ChainLink<T>) => {\n    _chain.add(chainLink);\n  };\n\n  const execute = () => {\n    for (const { action, validator } of _chain) {\n      if (validator()) action();\n    }\n  };\n\n  return { add, execute };\n};\n", "export const escapeTemplateString = (templateString: string): string => {\n  if (typeof templateString !== \"string\") return templateString;\n  return templateString\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#39;\")\n    .replace(/\\//g, \"&#x2F;\");\n};\n\nexport const bindStyleScope = (scopeId: string, strings: string): string => {\n  const regex = /(\\.(\\w+)(\\-*|\\_*)?)+\\w+/gi;\n  return strings.replace(regex, (values) => {\n    return `.${scopeId}-${values.replace(/\\./, \"\")}`;\n  });\n};\n\nexport const createUUID = () => Math.random().toString(36).slice(2, 6);\n\nexport const HTMLEvents = [\n  // Eventos de Mouse\n  \"onclick\",\n  \"ondblclick\",\n  \"onmousedown\",\n  \"onmouseup\",\n  \"onmouseover\",\n  \"onmouseout\",\n  \"onmousemove\",\n  \"onmouseenter\",\n  \"onmouseleave\",\n  \"oncontextmenu\",\n\n  // Eventos de Teclado\n  \"onkeydown\",\n  \"onkeyup\",\n  \"onkeypress\",\n\n  // Eventos de Foco\n  \"onfocus\",\n  \"onblur\",\n\n  // Eventos de Formul\u00E1rio\n  \"onsubmit\",\n  \"onchange\",\n  \"oninput\",\n  \"onreset\",\n  \"oninvalid\",\n\n  // Eventos de M\u00EDdia\n  \"onplay\",\n  \"onpause\",\n  \"onended\",\n  \"onvolumechange\",\n\n  // Eventos de Toque (Touch) - para dispositivos m\u00F3veis\n  \"ontouchstart\",\n  \"ontouchmove\",\n  \"ontouchend\",\n  \"ontouchcancel\",\n\n  // Eventos de Anima\u00E7\u00E3o e Transi\u00E7\u00E3o\n  \"onanimationstart\",\n  \"onanimationend\",\n  \"onanimationiteration\",\n  \"ontransitionend\",\n\n  // Eventos de Outros Interativos\n  \"onload\",\n  \"onerror\",\n  \"onresize\",\n  \"onscroll\",\n];\n", "import { HTMLEvents } from \"@/utils\";\n\nconst isObject =\n  <T>(payload: T) =>\n    () => {\n      return !!payload && !Array.isArray(payload) && typeof payload === \"object\";\n    };\n\nconst isArray =\n  <T>(payload: T) =>\n    () => {\n      return !!payload && Array.isArray(payload);\n    };\n\nconst isFunction =\n  <T = void>(payload: T) =>\n    () => {\n      return !!payload && typeof payload === \"function\";\n    };\n\nconst isString =\n  <T = void>(payload: T) =>\n    () => {\n      return typeof payload === \"string\";\n    };\n\nconst isEventName =\n  <T = void>(payload: T) =>\n    () => {\n      if (typeof payload !== \"string\") return false;\n      return HTMLEvents.includes(payload.toLowerCase());\n    };\n\nconst isTemplateData =\n  <T = void>(payload: T) =>\n    () => {\n      return typeof payload === \"string\" || typeof payload === \"number\";\n    };\n\nexport { isObject, isArray, isFunction, isString, isEventName, isTemplateData };\n", "import type { TaggedTemplate, TemplateSchema } from \"@/template\";\nimport {\n  renderTemplateArray,\n  renderTemplateObject,\n  renderTemplateData,\n} from \"@/actions\";\nimport { isArray, isObject, isTemplateData } from \"@/validators\";\n\ntype ContextElement = Element;\nimport { createChain } from \"@/factories\";\nimport { createState, type State } from \"@/state\";\n\n//const globalState = createState({});\n\nexport const render = (\n  template: TaggedTemplate,\n  context: ContextElement = document.body,\n  state: State = {},\n): ContextElement => {\n  const chain = createChain();\n  const componentElement = context || document.querySelector(\"body\");\n\n  chain.add({\n    validator: isArray(template),\n    action: renderTemplateArray(\n      template as TemplateSchema[],\n      componentElement,\n      state,\n    ),\n  });\n\n  chain.add({\n    validator: isObject(template),\n    action: renderTemplateObject(\n      template as TemplateSchema,\n      componentElement,\n      state,\n    ),\n  });\n\n  chain.add({\n    validator: isTemplateData(template),\n    action: renderTemplateData(template, componentElement, state),\n  });\n\n  chain.execute();\n  return componentElement;\n};\n", "import { render } from \"@/render\";\nimport type { TemplateSchema } from \"@/types\";\nimport type { State } from \"@/state\";\n\nexport const renderTemplateArray =\n  (\n    templateSchema: TemplateSchema[],\n    contextElement: Element,\n    state: State = {},\n  ) =>\n    () => {\n      for (const template of templateSchema) {\n        render(template, contextElement, state);\n      }\n    };\n", "import { render } from \"@/render\";\nimport type { TemplateSchema } from \"@/template\";\nimport type { State } from \"@/state\";\n\nexport const renderChildren = (\n  children: TemplateSchema[],\n  parentElement: Element,\n  state: State = {},\n) => {\n  parentElement.innerHTML = \"\";\n  if (!Array.isArray(children) && typeof children === \"object\") {\n    render(children, parentElement, state);\n    return;\n  }\n\n  for (const child of children) {\n    render(child, parentElement, state);\n  }\n};\n", "import type { StateWatcher, State, StateManager } from \"./types\";\n\nconst _createUUID = (): string => Math.random().toString(36).substring(2, 11);\n\nexport const createState = <S = unknown>(\n  initialState: State<S>,\n): StateManager<S> => {\n  const _state = JSON.parse(JSON.stringify(initialState));\n  const _watchers = new Set<StateWatcher<S>>();\n\n  const _notifyHandlers = (payload: State<S>) => {\n    for (const stateWatcher of _watchers) {\n      stateWatcher(payload);\n    }\n  };\n\n  const set = (payload: State<S>) => {\n    Object.assign(_state, JSON.parse(JSON.stringify(payload)));\n    _notifyHandlers(JSON.parse(JSON.stringify(_state)));\n  };\n\n  const get = (): State<S> => {\n    return JSON.parse(JSON.stringify(_state));\n  };\n\n  const watch = (callback: StateWatcher<S>) => {\n    _watchers.add(callback);\n  };\n\n  return { set, get, watch };\n};\n", "var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n", "import htm from \"htm\";\nimport type { TaggedTemplate, TemplateProps, TemplateSchema } from \"./types\";\n\nconst hypertext = (\n  type: unknown,\n  props: TemplateProps,\n  ...children: TemplateSchema[]\n) => {\n  return { type, props, children };\n};\n\nconst html = htm.bind<TaggedTemplate>(hypertext);\n\nexport { html };\nexport { html as jsx };\nexport { html as tsx };\n", "/**\n * Gera um hash \u00FAnico baseado no algoritmo DJB2.\n * @param str - O conte\u00FAdo a partir do qual o hash ser\u00E1 gerado.\n * @returns O hash gerado como uma string.\n */\nexport const createHash = (text: string, selector: string): string => {\n  let hash = 5381;\n  for (let i = 0; i < text.length; i++) {\n    hash = (hash * 33) ^ text.charCodeAt(i);\n  }\n  return `${selector}-${(hash >>> 0).toString(36)}`;\n};\n", "const styleElementCache: Map<string, HTMLStyleElement> = new Map();\n\nexport const createStyleElement = (componentId: string): HTMLStyleElement => {\n  const styleElement = styleElementCache.get(componentId);\n\n  if (styleElement !== undefined) {\n    return styleElement;\n  }\n\n  const style = document.createElement(\"style\");\n  style.setAttribute(\"data-component\", componentId);\n  document.head.appendChild(style);\n  styleElementCache.set(componentId, style);\n\n  return style;\n};\n", "interface WrapStyleParams {\n  style: string;\n  selector: string;\n}\n\ninterface Accumulator {\n  insideBlock: number;\n  globalRules: string;\n  result: string;\n}\n\ninterface LineProcessing {\n  globalRules: string;\n  result: string;\n}\n\nconst wrapLooseRulesOutsideMediaQuery = ({\n  style,\n  selector,\n}: WrapStyleParams): string => {\n  const lines = style.split(\"\\n\");\n  const ruleRegex = /^\\s*([\\w-]+)\\s*:\\s*[^;]+;/;\n\n  const initialState: Accumulator = {\n    insideBlock: 0,\n    globalRules: \"\",\n    result: \"\",\n  };\n\n  const processGlobalRules = (\n    globalRules: string,\n    result: string,\n    selector: string,\n  ): LineProcessing => ({\n    globalRules: \"\",\n    result: `${result}${selector} {\\n${globalRules}}\\n\\n`,\n  });\n\n  const processRegularLine = (\n    line: string,\n    result: string,\n  ): LineProcessing => ({\n    globalRules: \"\",\n    result: `${result}${line}\\n`,\n  });\n\n  const addGlobalRule = (\n    line: string,\n    globalRules: string,\n  ): LineProcessing => ({\n    globalRules: `${globalRules}${line}\\n`,\n    result: \"\",\n  });\n\n  const countBlocks = (line: string): number => {\n    const openings = (line.match(/{/g) || []).length;\n    const closings = (line.match(/}/g) || []).length;\n    return openings - closings;\n  };\n\n  const processLine = (acc: Accumulator, line: string): Accumulator => {\n    acc.insideBlock += countBlocks(line);\n\n    // Case 1: Line is a global rule\n    if (acc.insideBlock === 0 && ruleRegex.test(line)) {\n      const { globalRules, result } = addGlobalRule(line, acc.globalRules);\n      return { ...acc, globalRules, result: acc.result + result };\n    }\n\n    // Case 2: There are accumulated global rules\n    if (acc.globalRules) {\n      const { globalRules, result } = processGlobalRules(\n        acc.globalRules,\n        acc.result,\n        selector,\n      );\n      const processedLine = processRegularLine(line, \"\");\n      return {\n        ...acc,\n        globalRules,\n        result: result + processedLine.result,\n      };\n    }\n\n    // Case 3: Regular line\n    const { globalRules, result } = processRegularLine(line, acc.result);\n    return { ...acc, globalRules, result };\n  };\n\n  const { result, globalRules } = lines.reduce(processLine, initialState);\n\n  return globalRules\n    ? `${result}${selector} {\\n${globalRules}}\\n`.trim()\n    : result.trim();\n};\n\nconst wrapLooseRulesInsideMediaQuery = ({\n  style,\n  selector,\n}: WrapStyleParams): string => {\n  const regex = /@media\\s*([^{]+)\\s*\\{([\\s\\S]*?)\\}/g;\n  const ruleRegex = /^\\s*([\\w-]+)\\s*:\\s*[^;]+;/;\n\n  return style.replace(regex, (match, mediaQuery, innerCss) => {\n    const rules = innerCss\n      .trim()\n      .split(\"\\n\")\n      .map((line: string) => line.trim())\n      .filter((line: string) => line);\n\n    const wrappedRules = rules\n      .filter((rule: string) => ruleRegex.test(rule))\n      .map((rule: string) => `${selector} {\\n${rule.trim()}\\n}`)\n      .join(\"\\n\");\n\n    return `@media ${mediaQuery.trim()} {\\n${wrappedRules}\\n}`;\n  });\n};\n\nconst applyClassNameScope = ({ style, selector }: WrapStyleParams): string => {\n  const regex = /\\.(\\w+)/g;\n  return style.replace(regex, `.${selector}_$1`);\n};\n\nexport const transformStyle = (rawStyle: string, selector: string): string => {\n  let style = rawStyle;\n  const className = `.${selector}`;\n  style = applyClassNameScope({ style, selector });\n  style = wrapLooseRulesOutsideMediaQuery({ style, selector: className });\n  style = wrapLooseRulesInsideMediaQuery({ style, selector: className });\n\n  return style;\n};\n", "import type { TaggedStyle } from \"./types\";\nimport { createHash } from \"./createHash\";\nimport { transformStyle } from \"./cssParser\";\nimport { createStyleElement } from \"./createStyleElement\";\n\ntype HandlerParams = {\n  hashId: string;\n  scopedStyle: string;\n  styleElement: Element;\n};\ntype Handler = (payload: HandlerParams) => void;\n\nconst cssCache: Map<string, string> = new Map();\n\nexport const css =\n  (selector: string, handler: Handler = () => {}): TaggedStyle =>\n  (\n    strings: TemplateStringsArray,\n    ...interpolations: (string | number)[]\n  ): string => {\n    const rawCSS = strings.reduce(\n      (accumulator, str, index) =>\n        `${accumulator}${str}${interpolations[index] !== undefined ? interpolations[index] : \"\"}`,\n      \"\",\n    );\n\n    const cachedClassName = cssCache.get(rawCSS);\n    if (cachedClassName !== undefined) {\n      return cachedClassName;\n    }\n\n    const hashId = createHash(rawCSS, selector);\n    const scopedStyle = transformStyle(rawCSS, `${hashId}`);\n    const styleElement = createStyleElement(`${hashId}`);\n\n    handler({ hashId, scopedStyle, styleElement });\n\n    if (!styleElement.innerHTML.includes(scopedStyle)) {\n      styleElement.innerHTML += scopedStyle;\n    }\n\n    cssCache.set(rawCSS, hashId);\n\n    return hashId;\n  };\n", "import { isEventName } from \"@/validators\";\n\ntype Attribute = object & {\n  [key: symbol | string]: unknown;\n};\n\ntype EventHandler = <K extends keyof HTMLElementEventMap>(\n  event: HTMLElementEventMap[K],\n) => void;\n\nexport const setElementAttributes = (\n  element: Element,\n  attributes: Attribute,\n): Element => {\n  const attributeKeys = attributes ? Object.keys(attributes) : [];\n  for (const key of attributeKeys) {\n    if (!isEventName(key)()) {\n      element.setAttribute(key, attributes[key] as string);\n    } else {\n      const eventName = key\n        .replace(/on/, \"\")\n        .toLowerCase() as keyof HTMLElementEventMap;\n      const eventHandler = attributes[key] as EventHandler;\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n  return element;\n};\n", "import type { TemplateSchema } from \"@/template\";\nimport type { GenericObject, State, StateManager } from \"@/state\";\nimport { createState } from \"@/state\";\nimport { render } from \"@/render\";\nimport { html, jsx, tsx } from \"@/template\";\nimport { css } from \"@/style\";\nimport { renderChildren } from \"./renderChildren\";\nimport { setElementAttributes } from \"./setElementAttributes\";\n\ntype Factory = (params?: unknown) => unknown;\n\ntype StyleParams = {\n  props: State;\n  state: State;\n  css: ReturnType<typeof css>;\n};\n\ntype Styles = { [key: string]: string };\ntype StylesObject = GenericObject<{ [key: string]: () => string }>;\ntype StyleHandlerFactory = () => StylesObject;\ntype StyleHandler = (params: StyleParams) => string;\n\ntype TemplateParams = {\n  props: State;\n  state: State;\n  html: typeof html;\n  jsx: typeof jsx;\n  tsx: typeof tsx;\n  styles: Styles;\n  actions: Actions;\n};\n\ntype TemplateInjections = <T = unknown>() => GenericObject<T>;\n\ntype TemplateHandler = (\n  params: TemplateParams,\n  injections: TemplateInjections,\n) => void;\n\ntype Actions = GenericObject;\n\ntype ActionParams = {\n  props: State;\n  state: StateManager;\n};\ntype ActionHandlerFactory = (params: ActionParams) => GenericObject;\n\ntype Attribute = object & {\n  [key: symbol | string]: unknown;\n};\n\nconst _attributes = {};\n\nconst _createTagByFactoryName = (factory: Factory) => {\n  return factory.name\n    .split(/(?=[A-Z])/)\n    .join(\"-\")\n    .toLowerCase();\n};\n\nconst _createUseState = (state: StateManager) => {\n  const currentState = {};\n  const useState = <T>(initialState: State<T>): StateManager => {\n    const latestState = state.get() as State<T>;\n    state.set({ ...initialState, ...latestState });\n\n    Object.assign(currentState, state.get());\n    return { get: state.get, set: state.set, watch: state.watch };\n  };\n  return { currentState, useState };\n};\n\nconst _createUseStyle = ({ props, state, css }: StyleParams) => {\n  const stylesheet = {};\n  const useStyle = (cssHandlerFactory: StyleHandlerFactory) => {\n    const handlers = cssHandlerFactory();\n    const styles: Styles = {};\n\n    for (const key in handlers) {\n      const handler = handlers[key] as StyleHandler;\n      const style = handler({ props, state, css });\n      styles[key] = style;\n    }\n\n    Object.assign(stylesheet, styles);\n    return styles;\n  };\n\n  return { styles: stylesheet, useStyle };\n};\n\nconst _createUseTemplate = (params: TemplateParams) => {\n  const useTemplate = (\n    templateHandler: TemplateHandler,\n    templateInjections: TemplateInjections,\n  ) => {\n    return templateHandler(params, templateInjections);\n  };\n\n  return useTemplate;\n};\n\nconst _createUseAction = ({ props, state }: ActionParams) => {\n  const actions: GenericObject = {};\n\n  const useAction = (actionHandlerFactory: ActionHandlerFactory) => {\n    const handlerActions = actionHandlerFactory({ props, state });\n    Object.assign(actions, handlerActions);\n  };\n\n  return { actions, useAction };\n};\n\nexport const createElementByFactoryName = (\n  template: TemplateSchema,\n  parentElement: Element,\n  latestState: State = {},\n) => {\n  return () => {\n    const factory = template.type as Factory;\n    const tagName = _createTagByFactoryName(factory);\n    const selector = tagName.toLowerCase();\n    const element = document.createElement(tagName);\n\n    const props = template.props;\n    const latestDeepState = JSON.parse(JSON.stringify(latestState));\n    const stateManager = createState(latestDeepState);\n    const { currentState: state, useState } = _createUseState(stateManager);\n    const styled = css(selector, ({ hashId }) => {\n      element.classList.add(hashId);\n      Object.assign(_attributes, { class: hashId });\n    });\n    const { styles, useStyle } = _createUseStyle({ props, state, css: styled });\n    const { actions, useAction } = _createUseAction({\n      props,\n      state: stateManager,\n    });\n\n    const useTemplate = _createUseTemplate({\n      props,\n      state,\n      html,\n      jsx,\n      tsx,\n      styles,\n      actions,\n    });\n\n    const children = factory({\n      props,\n      useState,\n      useStyle,\n      useTemplate,\n      useAction,\n    }) as TemplateSchema[];\n\n    const oldElement = parentElement.querySelector(selector) as Element;\n    setElementAttributes(element, _attributes);\n\n    oldElement\n      ? oldElement.replaceWith(element)\n      : parentElement.insertAdjacentElement(\"beforeend\", element);\n\n    renderChildren(children, element, state);\n\n    stateManager.watch((payload) => {\n      element.innerHTML = \"\";\n      render(template, parentElement, payload);\n    });\n  };\n};\n", "import type { State } from \"@/state\";\nimport type { TemplateSchema } from \"@/template\";\nimport { setElementAttributes } from \"./setElementAttributes\";\nimport { renderChildren } from \"./renderChildren\";\n\nexport const createElementByTagName =\n  (template: TemplateSchema, parentElement: Element, state: State = {}) =>\n  () => {\n    const tagName = template.type as string;\n    const selector = tagName.toLowerCase();\n    const element = document.createElement(tagName);\n    const hashId = parentElement.getAttribute(\"class\") as string;\n    const className = template?.props?.class as string;\n    if (className) {\n      if (!className.includes(hashId)) {\n        const newClassName = `${hashId}_${className}`;\n        setElementAttributes(element, { class: newClassName });\n        parentElement.insertAdjacentElement(\"beforeend\", element);\n        renderChildren(template.children, element, state);\n        return;\n      }\n    }\n    setElementAttributes(element, template.props);\n    parentElement.insertAdjacentElement(\"beforeend\", element);\n    renderChildren(template.children, element, state);\n  };\n", "import { render } from \"@/render\";\nimport type { TemplateSchema, TaggedTemplate } from \"@/types\";\nimport type { State } from \"@/state\";\n\nexport const renderTemplateData =\n  (templateData: TaggedTemplate, element: Element, state: State = {}) =>\n    () => {\n      if (typeof templateData === \"string\") {\n        element.insertAdjacentHTML(\"beforeend\", templateData);\n      }\n\n      if (typeof templateData === \"number\") {\n        const data = Number(templateData);\n        const value = data.toString();\n        element.insertAdjacentHTML(\"beforeend\", value);\n      }\n    };\n", "import type { TemplateSchema } from \"@/types\";\nimport { createChain } from \"@/factories\";\nimport { createElementByFactoryName, createElementByTagName } from \"@/actions\";\nimport { isFunction, isString } from \"@/validators\";\nimport type { State } from \"@/state\";\n\nexport const renderTemplateObject =\n  (template: TemplateSchema, contextElement: Element, state: State = {}) =>\n    (): void => {\n      const _chain = createChain();\n\n      _chain.add({\n        validator: isString(template.type),\n        action: createElementByTagName(template, contextElement, state),\n      });\n\n      _chain.add({\n        validator: isFunction(template.type),\n        action: createElementByFactoryName(template, contextElement, state),\n      });\n\n      _chain.execute();\n    };\n"],
  "mappings": "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",
  "names": ["createChain", "__name", "_chain", "chainLink", "action", "validator", "HTMLEvents", "isObject", "__name", "payload", "isArray", "isFunction", "isString", "isEventName", "HTMLEvents", "isTemplateData", "render", "__name", "template", "context", "state", "chain", "createChain", "componentElement", "isArray", "renderTemplateArray", "isObject", "renderTemplateObject", "isTemplateData", "renderTemplateData", "renderTemplateArray", "__name", "templateSchema", "contextElement", "state", "template", "render", "renderChildren", "__name", "children", "parentElement", "state", "render", "child", "createState", "__name", "initialState", "_state", "_watchers", "_notifyHandlers", "payload", "stateWatcher", "callback", "n", "__name", "t", "s", "r", "e", "u", "h", "p", "a", "htm_module_default", "l", "hypertext", "__name", "type", "props", "children", "html", "htm_module_default", "createHash", "__name", "text", "selector", "hash", "i", "styleElementCache", "createStyleElement", "__name", "componentId", "styleElement", "style", "wrapLooseRulesOutsideMediaQuery", "__name", "style", "selector", "lines", "ruleRegex", "initialState", "processGlobalRules", "globalRules", "result", "processRegularLine", "line", "addGlobalRule", "countBlocks", "openings", "closings", "processLine", "acc", "processedLine", "wrapLooseRulesInsideMediaQuery", "regex", "match", "mediaQuery", "innerCss", "wrappedRules", "rule", "applyClassNameScope", "transformStyle", "rawStyle", "className", "cssCache", "css", "__name", "selector", "handler", "strings", "interpolations", "rawCSS", "accumulator", "str", "index", "cachedClassName", "hashId", "createHash", "scopedStyle", "transformStyle", "styleElement", "createStyleElement", "setElementAttributes", "__name", "element", "attributes", "attributeKeys", "key", "isEventName", "eventName", "eventHandler", "_attributes", "_createTagByFactoryName", "__name", "factory", "_createUseState", "state", "currentState", "initialState", "latestState", "_createUseStyle", "props", "css", "stylesheet", "cssHandlerFactory", "handlers", "styles", "key", "handler", "style", "_createUseTemplate", "params", "templateHandler", "templateInjections", "_createUseAction", "actions", "actionHandlerFactory", "handlerActions", "createElementByFactoryName", "template", "parentElement", "tagName", "selector", "element", "latestDeepState", "stateManager", "createState", "useState", "styled", "hashId", "useStyle", "useAction", "useTemplate", "html", "children", "oldElement", "setElementAttributes", "renderChildren", "payload", "render", "createElementByTagName", "__name", "template", "parentElement", "state", "tagName", "selector", "element", "hashId", "className", "newClassName", "setElementAttributes", "renderChildren", "renderTemplateData", "__name", "templateData", "element", "state", "value", "renderTemplateObject", "__name", "template", "contextElement", "state", "_chain", "createChain", "isString", "createElementByTagName", "isFunction", "createElementByFactoryName"]
}
