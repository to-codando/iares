{
  "version": 3,
  "sources": ["../../../../src/utils/index.ts", "../../../../src/validators/template/index.ts", "../../../../src/actions/template/setElementAttributes.ts", "../../../../src/factories/createChain/index.ts", "../../../../src/actions/template/renderTemplateObject.ts", "../../../../src/actions/template/renderTemplateArray.ts", "../../../../src/state/createState.ts", "../../../../../../node_modules/.pnpm/htm@3.1.1/node_modules/htm/dist/htm.module.js", "../../../../src/template/html.ts", "../../../../src/style/createHash.ts", "../../../../src/style/createStyleElement.ts", "../../../../src/style/cssParser.ts", "../../../../src/style/css.ts", "../../../../src/actions/template/createElementByFactoryName.ts", "../../../../src/actions/template/renderTemplateData.ts", "../../../../src/render/index.ts", "../../../../src/actions/template/renderChildren.ts", "../../../../src/actions/template/createElementByTagName.ts"],
  "sourcesContent": ["export const escapeTemplateString = (templateString: string): string => {\n  if (typeof templateString !== \"string\") return templateString;\n  return templateString\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#39;\")\n    .replace(/\\//g, \"&#x2F;\");\n};\n\nexport const bindStyleScope = (scopeId: string, strings: string): string => {\n  const regex = /(\\.(\\w+)(\\-*|\\_*)?)+\\w+/gi;\n  return strings.replace(regex, (values) => {\n    return `.${scopeId}-${values.replace(/\\./, \"\")}`;\n  });\n};\n\nexport const createUUID = () => Math.random().toString(36).slice(2, 6);\n\nexport const HTMLEvents = [\n  // Eventos de Mouse\n  \"onclick\",\n  \"ondblclick\",\n  \"onmousedown\",\n  \"onmouseup\",\n  \"onmouseover\",\n  \"onmouseout\",\n  \"onmousemove\",\n  \"onmouseenter\",\n  \"onmouseleave\",\n  \"oncontextmenu\",\n\n  // Eventos de Teclado\n  \"onkeydown\",\n  \"onkeyup\",\n  \"onkeypress\",\n\n  // Eventos de Foco\n  \"onfocus\",\n  \"onblur\",\n\n  // Eventos de Formul\u00E1rio\n  \"onsubmit\",\n  \"onchange\",\n  \"oninput\",\n  \"onreset\",\n  \"oninvalid\",\n\n  // Eventos de M\u00EDdia\n  \"onplay\",\n  \"onpause\",\n  \"onended\",\n  \"onvolumechange\",\n\n  // Eventos de Toque (Touch) - para dispositivos m\u00F3veis\n  \"ontouchstart\",\n  \"ontouchmove\",\n  \"ontouchend\",\n  \"ontouchcancel\",\n\n  // Eventos de Anima\u00E7\u00E3o e Transi\u00E7\u00E3o\n  \"onanimationstart\",\n  \"onanimationend\",\n  \"onanimationiteration\",\n  \"ontransitionend\",\n\n  // Eventos de Outros Interativos\n  \"onload\",\n  \"onerror\",\n  \"onresize\",\n  \"onscroll\",\n];\n", "import { HTMLEvents } from \"@/utils\";\n\nconst isObject =\n  <T>(payload: T) =>\n    () => {\n      return !!payload && !Array.isArray(payload) && typeof payload === \"object\";\n    };\n\nconst isArray =\n  <T>(payload: T) =>\n    () => {\n      return !!payload && Array.isArray(payload);\n    };\n\nconst isFunction =\n  <T = void>(payload: T) =>\n    () => {\n      return !!payload && typeof payload === \"function\";\n    };\n\nconst isString =\n  <T = void>(payload: T) =>\n    () => {\n      return typeof payload === \"string\";\n    };\n\nconst isEventName =\n  <T = void>(payload: T) =>\n    () => {\n      if (typeof payload !== \"string\") return false;\n      return HTMLEvents.includes(payload.toLowerCase());\n    };\n\nconst isTemplateData =\n  <T = void>(payload: T) =>\n    () => {\n      return typeof payload === \"string\" || typeof payload === \"number\";\n    };\n\nexport { isObject, isArray, isFunction, isString, isEventName, isTemplateData };\n", "import { isEventName } from \"@/validators\";\n\ntype Attribute = object & {\n  [key: symbol | string]: unknown;\n};\n\ntype EventHandler = <K extends keyof HTMLElementEventMap>(\n  event: HTMLElementEventMap[K],\n) => void;\n\nexport const setElementAttributes = (\n  element: Element,\n  attributes: Attribute,\n): Element => {\n  const attributeKeys = attributes ? Object.keys(attributes) : [];\n  for (const key of attributeKeys) {\n    if (!isEventName(key)()) {\n      element.setAttribute(key, attributes[key] as string);\n    } else {\n      const eventName = key\n        .replace(/on/, \"\")\n        .toLowerCase() as keyof HTMLElementEventMap;\n      const eventHandler = attributes[key] as EventHandler;\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n  return element;\n};\n", "import type { ChainLink } from \"./types\";\n\nexport const createChain = () => {\n  const _chain = new Set<ChainLink<unknown>>();\n\n  const add = <T>(chainLink: ChainLink<T>) => {\n    _chain.add(chainLink);\n  };\n\n  const execute = () => {\n    for (const { action, validator } of _chain) {\n      if (validator()) action();\n    }\n  };\n\n  return { add, execute };\n};\n", "import type { TemplateSchema } from \"@/types\";\nimport { createChain } from \"@/factories\";\nimport { createElementByFactoryName, createElementByTagName } from \"@/actions\";\nimport { isFunction, isString } from \"@/validators\";\nimport type { State } from \"@/state\";\n\nexport const renderTemplateObject =\n  (template: TemplateSchema, contextElement: Element, state: State = {}) =>\n    (): void => {\n      const _chain = createChain();\n\n      _chain.add({\n        validator: isString(template.type),\n        action: createElementByTagName(template, contextElement, state),\n      });\n\n      _chain.add({\n        validator: isFunction(template.type),\n        action: createElementByFactoryName(template, contextElement, state),\n      });\n\n      _chain.execute();\n    };\n", "import { render } from \"@/render\";\nimport type { TemplateSchema } from \"@/types\";\nimport type { State } from \"@/state\";\n\nexport const renderTemplateArray =\n  (\n    templateSchema: TemplateSchema[],\n    contextElement: Element,\n    state: State = {},\n  ) =>\n    () => {\n      for (const template of templateSchema) {\n        render(template, contextElement, state);\n      }\n    };\n", "import type { StateWatcher, State, StateManager } from \"./types\";\n\nconst _createUUID = (): string => Math.random().toString(36).substring(2, 11);\n\nexport const createState = <S = unknown>(\n  initialState: State<S>,\n): StateManager<S> => {\n  const _state = JSON.parse(JSON.stringify(initialState));\n  const _watchers = new Set<StateWatcher<S>>();\n\n  const _notifyHandlers = (payload: State<S>) => {\n    for (const stateWatcher of _watchers) {\n      stateWatcher(payload);\n    }\n  };\n\n  const set = (payload: State<S>) => {\n    Object.assign(_state, JSON.parse(JSON.stringify(payload)));\n    _notifyHandlers(JSON.parse(JSON.stringify(_state)));\n  };\n\n  const get = (): State<S> => {\n    return JSON.parse(JSON.stringify(_state));\n  };\n\n  const watch = (callback: StateWatcher<S>) => {\n    _watchers.add(callback);\n  };\n\n  return { set, get, watch };\n};\n", "var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n", "import htm from \"htm\";\nimport type { TaggedTemplate, TemplateProps, TemplateSchema } from \"./types\";\n\nconst hypertext = (\n  type: unknown,\n  props: TemplateProps,\n  ...children: TemplateSchema[]\n) => {\n  return { type, props, children };\n};\n\nconst html = htm.bind<TaggedTemplate>(hypertext);\n\nexport { html };\nexport { html as jsx };\nexport { html as tsx };\n", "/**\n * Gera um hash \u00FAnico baseado no algoritmo DJB2.\n * @param str - O conte\u00FAdo a partir do qual o hash ser\u00E1 gerado.\n * @returns O hash gerado como uma string.\n */\nexport const createHash = (text: string, selector: string): string => {\n  let hash = 5381;\n  for (let i = 0; i < text.length; i++) {\n    hash = (hash * 33) ^ text.charCodeAt(i);\n  }\n  return `${selector}-${(hash >>> 0).toString(36)}`;\n};\n", "const styleElementCache: Map<string, HTMLStyleElement> = new Map();\n\nexport const createStyleElement = (componentId: string): HTMLStyleElement => {\n  const styleElement = styleElementCache.get(componentId);\n\n  if (styleElement !== undefined) {\n    return styleElement;\n  }\n\n  const style = document.createElement(\"style\");\n  style.setAttribute(\"data-component\", componentId);\n  document.head.appendChild(style);\n  styleElementCache.set(componentId, style);\n\n  return style;\n};\n", "type WrapStyleParams = {\n  style: string;\n  selector: string;\n};\n\ntype Accumulator = {\n  insideBlock: number;\n  globalRules: string;\n  result: string;\n};\n\ntype LineProcessing = {\n  globalRules: string;\n  result: string;\n};\n\nconst wrapLooseRulesOutsideMediaQuery = ({\n  style,\n  selector,\n}: WrapStyleParams): string => {\n  const lines = style.split(\"\\n\");\n  const ruleRegex = /^\\s*([\\w-]+)\\s*:\\s*[^;]+;/;\n\n  const initialState: Accumulator = {\n    insideBlock: 0,\n    globalRules: \"\",\n    result: \"\",\n  };\n\n  const processGlobalRules = (\n    globalRules: string,\n    result: string,\n    selector: string,\n  ): LineProcessing => ({\n    globalRules: \"\",\n    result: `${result}${selector} {\\n${globalRules}}\\n\\n`,\n  });\n\n  const processRegularLine = (\n    line: string,\n    result: string,\n  ): LineProcessing => ({\n    globalRules: \"\",\n    result: `${result}${line}\\n`,\n  });\n\n  const addGlobalRule = (\n    line: string,\n    globalRules: string,\n  ): LineProcessing => ({\n    globalRules: `${globalRules}${line}\\n`,\n    result: \"\",\n  });\n\n  const countBlocks = (line: string): number => {\n    const openings = (line.match(/{/g) || []).length;\n    const closings = (line.match(/}/g) || []).length;\n    return openings - closings;\n  };\n\n  const processLine = (acc: Accumulator, line: string): Accumulator => {\n    acc.insideBlock += countBlocks(line);\n\n    // Case 1: Line is a global rule\n    if (acc.insideBlock === 0 && ruleRegex.test(line)) {\n      const { globalRules, result } = addGlobalRule(line, acc.globalRules);\n      return { ...acc, globalRules, result: acc.result + result };\n    }\n\n    // Case 2: There are accumulated global rules\n    if (acc.globalRules) {\n      const { globalRules, result } = processGlobalRules(\n        acc.globalRules,\n        acc.result,\n        selector,\n      );\n      const processedLine = processRegularLine(line, \"\");\n      return {\n        ...acc,\n        globalRules,\n        result: result + processedLine.result,\n      };\n    }\n\n    // Case 3: Regular line\n    const { globalRules, result } = processRegularLine(line, acc.result);\n    return { ...acc, globalRules, result };\n  };\n\n  const { result, globalRules } = lines.reduce(processLine, initialState);\n\n  return globalRules\n    ? `${result}${selector} {\\n${globalRules}}\\n`.trim()\n    : result.trim();\n};\n\nconst wrapLooseRulesInsideMediaQuery = ({\n  style,\n  selector,\n}: WrapStyleParams): string => {\n  const regex = /@media\\s*([^{]+)\\s*\\{([\\s\\S]*?)\\}/g;\n  const ruleRegex = /^\\s*([\\w-]+)\\s*:\\s*[^;]+;/;\n\n  return style.replace(regex, (match, mediaQuery, innerCss) => {\n    const rules = innerCss\n      .trim()\n      .split(\"\\n\")\n      .map((line: string) => line.trim())\n      .filter((line: string) => line);\n\n    const wrappedRules = rules\n      .filter((rule: string) => ruleRegex.test(rule))\n      .map((rule: string) => `${selector} {\\n${rule.trim()}\\n}`)\n      .join(\"\\n\");\n\n    return `@media ${mediaQuery.trim()} {\\n${wrappedRules}\\n}`;\n  });\n};\n\nconst applyClassNameScope = ({ style, selector }: WrapStyleParams): string => {\n  const regex = /\\.(?<![\\d])(?![\\d])([\\w-]+)/g;\n  return style.replace(regex, `.${selector}_$1`);\n};\n\nexport const transformStyle = (rawStyle: string, selector: string): string => {\n  let style = rawStyle;\n  const className = `.${selector}`;\n  style = applyClassNameScope({ style, selector });\n  style = wrapLooseRulesOutsideMediaQuery({ style, selector: className });\n  style = wrapLooseRulesInsideMediaQuery({ style, selector: className });\n\n  return style;\n};\n", "import type { TaggedStyle } from \"./types\";\nimport { createHash } from \"./createHash\";\nimport { transformStyle } from \"./cssParser\";\nimport { createStyleElement } from \"./createStyleElement\";\n\ntype HandlerParams = {\n  hashId: string;\n  scopedStyle: string;\n  styleElement: Element;\n};\ntype Handler = (payload: HandlerParams) => void;\n\nconst cssCache: Map<string, string> = new Map();\n\nexport const css =\n  (selector: string, handler: Handler = () => { }): TaggedStyle =>\n    (\n      strings: TemplateStringsArray,\n      ...interpolations: (string | number)[]\n    ): string => {\n      const rawCSS = strings.reduce(\n        (accumulator, str, index) =>\n          `${accumulator}${str}${interpolations[index] !== undefined ? interpolations[index] : \"\"}`,\n        \"\",\n      );\n\n      const cachedClassName = cssCache.get(rawCSS);\n      if (cachedClassName !== undefined) {\n        // Verifica se o elemento style existe no DOM\n        const existingStyle = document.head.querySelector(\n          `[data-component=\"${cachedClassName}\"]`,\n        );\n\n        // Se n\u00E3o existir, recria o elemento style\n        if (!existingStyle) {\n          const scopedStyle = transformStyle(rawCSS, cachedClassName);\n          const styleElement = createStyleElement(cachedClassName);\n          styleElement.innerHTML += scopedStyle;\n          handler({ hashId: cachedClassName, scopedStyle, styleElement });\n        }\n\n        return cachedClassName;\n      }\n\n      const hashId = createHash(rawCSS, selector);\n      const scopedStyle = transformStyle(rawCSS, hashId);\n      const styleElement = createStyleElement(hashId);\n\n      handler({ hashId, scopedStyle, styleElement });\n\n      if (!styleElement.innerHTML.includes(scopedStyle)) {\n        styleElement.innerHTML += scopedStyle;\n      }\n\n      cssCache.set(rawCSS, hashId);\n\n      return hashId;\n    };\n", "import type { TemplateSchema } from \"@/template\";\nimport type { GenericObject, State, StateManager } from \"@/state\";\nimport { createState } from \"@/state\";\nimport { render } from \"@/render\";\nimport { html, jsx, tsx } from \"@/template\";\nimport { css } from \"@/style\";\nimport { renderChildren } from \"./renderChildren\";\nimport { setElementAttributes } from \"./setElementAttributes\";\n\ntype Factory = (params?: unknown) => unknown;\n\ntype StyleParams = {\n  props: State;\n  state: State;\n  css: ReturnType<typeof css>;\n};\n\ntype Styles = { [key: string]: string };\ntype StylesObject = GenericObject<{ [key: string]: () => string }>;\ntype StyleHandlerFactory = () => StylesObject;\ntype StyleHandler = (params: StyleParams) => string;\n\ntype TemplateParams = {\n  props: State;\n  state: State;\n  html: typeof html;\n  jsx: typeof jsx;\n  tsx: typeof tsx;\n  styles: Styles;\n  actions: Actions;\n};\n\ntype TemplateInjections = <T = unknown>() => GenericObject<T>;\n\ntype TemplateHandler = (\n  params: TemplateParams,\n  injections: TemplateInjections,\n) => void;\n\ntype Actions = GenericObject;\n\ntype ActionParams = {\n  props: State;\n  state: StateManager;\n};\ntype ActionHandlerFactory = (params: ActionParams) => GenericObject;\n\ntype Attribute = object & {\n  [key: symbol | string]: unknown;\n};\n\nconst _attributes = {};\n\nconst _createTagByFactoryName = (factory: Factory) => {\n  return factory.name\n    .split(/(?=[A-Z])/)\n    .join(\"-\")\n    .toLowerCase();\n};\n\nconst _createUseState = (state: StateManager) => {\n  const currentState = {};\n  const useState = <T>(initialState: State<T>): StateManager => {\n    const latestState = state.get() as State<T>;\n    state.set({ ...initialState, ...latestState });\n\n    Object.assign(currentState, state.get());\n    return { get: state.get, set: state.set, watch: state.watch };\n  };\n  return { currentState, useState };\n};\n\nconst _createUseStyle = ({ props, state, css }: StyleParams) => {\n  const stylesheet = {};\n  const useStyle = (cssHandlerFactory: StyleHandlerFactory) => {\n    const handlers = cssHandlerFactory();\n    const styles: Styles = {};\n\n    for (const key in handlers) {\n      const handler = handlers[key] as StyleHandler;\n      const style = handler({ props, state, css });\n      styles[key] = style;\n    }\n\n    Object.assign(stylesheet, styles);\n    return styles;\n  };\n\n  return { styles: stylesheet, useStyle };\n};\n\nconst _createUseTemplate = (params: TemplateParams) => {\n  const useTemplate = (\n    templateHandler: TemplateHandler,\n    templateInjections: TemplateInjections,\n  ) => {\n    return templateHandler(params, templateInjections);\n  };\n\n  return useTemplate;\n};\n\nconst _createUseAction = ({ props, state }: ActionParams) => {\n  const actions: GenericObject = {};\n\n  const useAction = (actionHandlerFactory: ActionHandlerFactory) => {\n    const handlerActions = actionHandlerFactory({ props, state });\n    Object.assign(actions, handlerActions);\n  };\n\n  return { actions, useAction };\n};\n\nexport const createElementByFactoryName = (\n  template: TemplateSchema,\n  parentElement: Element,\n  latestState: State = {},\n) => {\n  return () => {\n    const factory = template.type as Factory;\n    const tagName = _createTagByFactoryName(factory);\n    const selector = tagName.toLowerCase();\n    const element = document.createElement(tagName);\n\n    const props = template.props;\n    const latestDeepState = JSON.parse(JSON.stringify(latestState));\n    const stateManager = createState(latestDeepState);\n    const { currentState: state, useState } = _createUseState(stateManager);\n    const styled = css(selector, ({ hashId }) => {\n      element.classList.add(hashId);\n      Object.assign(_attributes, { class: hashId });\n    });\n    const { styles, useStyle } = _createUseStyle({ props, state, css: styled });\n    const { actions, useAction } = _createUseAction({\n      props,\n      state: stateManager,\n    });\n\n    const useTemplate = _createUseTemplate({\n      props,\n      state,\n      html,\n      jsx,\n      tsx,\n      styles,\n      actions,\n    });\n\n    const children = factory({\n      props,\n      useState,\n      useStyle,\n      useTemplate,\n      useAction,\n    }) as TemplateSchema[];\n\n    const oldElement = parentElement.querySelector(selector) as Element;\n    setElementAttributes(element, _attributes);\n\n    oldElement\n      ? oldElement.replaceWith(element)\n      : parentElement.insertAdjacentElement(\"beforeend\", element);\n\n    renderChildren(children, element, state);\n\n    stateManager.watch((payload) => {\n      element.innerHTML = \"\";\n      render(template, parentElement, payload);\n    });\n  };\n};\n", "import { render } from \"@/render\";\nimport type { TemplateSchema, TaggedTemplate } from \"@/types\";\nimport type { State } from \"@/state\";\n\nexport const renderTemplateData =\n  (templateData: TaggedTemplate, element: Element, state: State = {}) =>\n    () => {\n      if (typeof templateData === \"string\") {\n        element.insertAdjacentHTML(\"beforeend\", templateData);\n      }\n\n      if (typeof templateData === \"number\") {\n        const data = Number(templateData);\n        const value = data.toString();\n        element.insertAdjacentHTML(\"beforeend\", value);\n      }\n    };\n", "import type { TaggedTemplate, TemplateSchema } from \"@/template\";\nimport {\n  renderTemplateArray,\n  renderTemplateObject,\n  renderTemplateData,\n} from \"@/actions\";\nimport { isArray, isObject, isTemplateData } from \"@/validators\";\n\ntype ContextElement = Element;\nimport { createChain } from \"@/factories\";\nimport { createState, type State } from \"@/state\";\n\n//const globalState = createState({});\n\nexport const render = (\n  template: TaggedTemplate,\n  context: ContextElement = document.body,\n  state: State = {},\n): ContextElement => {\n  const chain = createChain();\n  const componentElement = context || document.querySelector(\"body\");\n\n  chain.add({\n    validator: isArray(template),\n    action: renderTemplateArray(\n      template as TemplateSchema[],\n      componentElement,\n      state,\n    ),\n  });\n\n  chain.add({\n    validator: isObject(template),\n    action: renderTemplateObject(\n      template as TemplateSchema,\n      componentElement,\n      state,\n    ),\n  });\n\n  chain.add({\n    validator: isTemplateData(template),\n    action: renderTemplateData(template, componentElement, state),\n  });\n\n  chain.execute();\n  return componentElement;\n};\n", "import { render } from \"@/render\";\nimport type { TemplateSchema } from \"@/template\";\nimport type { State } from \"@/state\";\n\nexport const renderChildren = (\n  children: TemplateSchema[],\n  parentElement: Element,\n  state: State = {},\n) => {\n  parentElement.innerHTML = \"\";\n  if (!Array.isArray(children) && typeof children === \"object\") {\n    render(children, parentElement, state);\n    return;\n  }\n\n  for (const child of children) {\n    render(child, parentElement, state);\n  }\n};\n", "import type { State } from \"@/state\";\nimport type { TemplateSchema } from \"@/template\";\nimport { setElementAttributes } from \"./setElementAttributes\";\nimport { renderChildren } from \"./renderChildren\";\n\nexport const createElementByTagName =\n  (template: TemplateSchema, parentElement: Element, state: State = {}) =>\n  () => {\n    const tagName = template.type as string;\n    const selector = tagName.toLowerCase();\n    const element = document.createElement(tagName);\n    const hashId = parentElement.getAttribute(\"class\") as string;\n    const className = template?.props?.class as string;\n    if (className) {\n      if (!className.includes(hashId)) {\n        const newClassName = `${hashId}_${className}`;\n        setElementAttributes(element, { class: newClassName });\n        parentElement.insertAdjacentElement(\"beforeend\", element);\n        renderChildren(template.children, element, state);\n        return;\n      }\n    }\n    setElementAttributes(element, template.props);\n    parentElement.insertAdjacentElement(\"beforeend\", element);\n    renderChildren(template.children, element, state);\n  };\n"],
  "mappings": "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",
  "names": ["t", "n", "s", "r", "globalRules", "result", "selector", "scopedStyle", "styleElement", "css"]
}
