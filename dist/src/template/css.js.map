{
  "version": 3,
  "sources": ["../../../src/utils/index.ts", "../../../src/template/css.ts"],
  "sourcesContent": ["export const escapeTemplateString = (templateString: string): string => {\n  if (typeof templateString !== \"string\") return templateString;\n  return templateString\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#39;\")\n    .replace(/\\//g, \"&#x2F;\");\n};\n\nexport const bindStyleScope = (scopeId: string, strings: string) => {\n  const regex = /(\\.(\\w+)(\\-*|\\_*)?)+\\w+/gi;\n  return strings.replace(regex, (values) => {\n    return `.${scopeId}-${values.replace(/\\./, \"\")}`;\n  });\n};\n\nexport const HTMLEvents = [\n  // Eventos de Mouse\n  \"onclick\",\n  \"ondblclick\",\n  \"onmousedown\",\n  \"onmouseup\",\n  \"onmouseover\",\n  \"onmouseout\",\n  \"onmousemove\",\n  \"onmouseenter\",\n  \"onmouseleave\",\n  \"oncontextmenu\",\n\n  // Eventos de Teclado\n  \"onkeydown\",\n  \"onkeyup\",\n  \"onkeypress\",\n\n  // Eventos de Foco\n  \"onfocus\",\n  \"onblur\",\n\n  // Eventos de Formul\u00E1rio\n  \"onsubmit\",\n  \"onchange\",\n  \"oninput\",\n  \"onreset\",\n  \"oninvalid\",\n\n  // Eventos de M\u00EDdia\n  \"onplay\",\n  \"onpause\",\n  \"onended\",\n  \"onvolumechange\",\n\n  // Eventos de Toque (Touch) - para dispositivos m\u00F3veis\n  \"ontouchstart\",\n  \"ontouchmove\",\n  \"ontouchend\",\n  \"ontouchcancel\",\n\n  // Eventos de Anima\u00E7\u00E3o e Transi\u00E7\u00E3o\n  \"onanimationstart\",\n  \"onanimationend\",\n  \"onanimationiteration\",\n  \"ontransitionend\",\n\n  // Eventos de Outros Interativos\n  \"onload\",\n  \"onerror\",\n  \"onresize\",\n  \"onscroll\",\n];\n", "import { escapeTemplateString, bindStyleScope } from \"@/utils\";\n\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): string => {\n  const scoped = !![...values].shift();\n  const scopeId = Math.random().toString(36).slice(2, 6);\n\n  const styles = strings\n    .map((string, index) => {\n      const value = values[index] || {};\n      return `${string} ${value}`;\n    })\n    .join(\"\");\n\n  return escapeTemplateString(\n    scoped ? bindStyleScope(scopeId, styles) : styles,\n  );\n};\n"],
  "mappings": "+EAAO,IAAMA,EAAuBC,EAACC,GAC/B,OAAOA,GAAmB,SAAiBA,EACxCA,EACJ,QAAQ,KAAM,OAAO,EACrB,QAAQ,KAAM,MAAM,EACpB,QAAQ,KAAM,MAAM,EACpB,QAAQ,KAAM,QAAQ,EACtB,QAAQ,KAAM,OAAO,EACrB,QAAQ,MAAO,QAAQ,EARQ,wBAWvBC,EAAiBF,EAAA,CAACG,EAAiBC,IAAoB,CAClE,IAAMC,EAAQ,4BACd,OAAOD,EAAQ,QAAQC,EAAQC,GACtB,IAAIH,CAAO,IAAIG,EAAO,QAAQ,KAAM,EAAE,CAAC,EAC/C,CACH,EAL8B,kBCTvB,IAAMC,EAAMC,EAAA,CACjBC,KACGC,IACQ,CACX,IAAMC,EAAS,CAAC,CAAC,CAAC,GAAGD,CAAM,EAAE,MAAM,EAC7BE,EAAU,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,EAE/CC,EAASJ,EACZ,IAAI,CAACK,EAAQC,IAAU,CACtB,IAAMC,EAAQN,EAAOK,CAAK,GAAK,CAAC,EAChC,MAAO,GAAGD,CAAM,IAAIE,CAAK,EAC3B,CAAC,EACA,KAAK,EAAE,EAEV,OAAOC,EACLN,EAASO,EAAeN,EAASC,CAAM,EAAIA,CAC7C,CACF,EAjBmB",
  "names": ["escapeTemplateString", "__name", "templateString", "bindStyleScope", "scopeId", "strings", "regex", "values", "css", "__name", "strings", "values", "scoped", "scopeId", "styles", "string", "index", "value", "escapeTemplateString", "bindStyleScope"]
}
