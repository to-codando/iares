{
  "version": 3,
  "sources": ["../../../src/utils/index.ts", "../../../src/template/css.ts"],
  "sourcesContent": ["export const escapeTemplateString = (templateString: string): string => {\n  if (typeof templateString !== \"string\") return templateString;\n  return templateString\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#39;\")\n    .replace(/\\//g, \"&#x2F;\");\n};\n\nexport const bindStyleScope = (scopeId: string, strings: string): string => {\n  const regex = /(\\.(\\w+)(\\-*|\\_*)?)+\\w+/gi;\n  return strings.replace(regex, (values) => {\n    return `.${scopeId}-${values.replace(/\\./, \"\")}`;\n  });\n};\n\nexport const createUUID = () => Math.random().toString(36).slice(2, 6);\n\nexport const HTMLEvents = [\n  // Eventos de Mouse\n  \"onclick\",\n  \"ondblclick\",\n  \"onmousedown\",\n  \"onmouseup\",\n  \"onmouseover\",\n  \"onmouseout\",\n  \"onmousemove\",\n  \"onmouseenter\",\n  \"onmouseleave\",\n  \"oncontextmenu\",\n\n  // Eventos de Teclado\n  \"onkeydown\",\n  \"onkeyup\",\n  \"onkeypress\",\n\n  // Eventos de Foco\n  \"onfocus\",\n  \"onblur\",\n\n  // Eventos de Formul\u00E1rio\n  \"onsubmit\",\n  \"onchange\",\n  \"oninput\",\n  \"onreset\",\n  \"oninvalid\",\n\n  // Eventos de M\u00EDdia\n  \"onplay\",\n  \"onpause\",\n  \"onended\",\n  \"onvolumechange\",\n\n  // Eventos de Toque (Touch) - para dispositivos m\u00F3veis\n  \"ontouchstart\",\n  \"ontouchmove\",\n  \"ontouchend\",\n  \"ontouchcancel\",\n\n  // Eventos de Anima\u00E7\u00E3o e Transi\u00E7\u00E3o\n  \"onanimationstart\",\n  \"onanimationend\",\n  \"onanimationiteration\",\n  \"ontransitionend\",\n\n  // Eventos de Outros Interativos\n  \"onload\",\n  \"onerror\",\n  \"onresize\",\n  \"onscroll\",\n];\n", "import { createUUID } from \"@/utils\";\n\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (string | number | (() => string | number))[]\n): string => {\n  const uniqueId = createUUID();\n\n  const processedValues = values.map((value) =>\n    typeof value === \"function\" ? value().toString() : value.toString(),\n  );\n\n  const rawCss = strings\n    .map((str, index) => `${str}${processedValues[index] || \"\"}`)\n    .join(\"\");\n\n  const prefixedCss = rawCss.replace(\n    /([^{}]+){([^}]*)}/g,\n    (match, selectors, content) => {\n      if (selectors.trim().startsWith(\"@\")) {\n        return match;\n      }\n\n      const prefixedSelectors = selectors\n        .split(\",\")\n        .map((sel: string) => `.${uniqueId}${sel.trim()}`)\n        .join(\", \");\n\n      return `${prefixedSelectors} {${content}}`;\n    },\n  );\n\n  return prefixedCss;\n};\n"],
  "mappings": ";;;;AAAO,IAAM,uBAAuB,wBAAC,mBAAmC;AACtE,MAAI,OAAO,mBAAmB,SAAU,QAAO;AAC/C,SAAO,eACJ,QAAQ,MAAM,OAAO,EACrB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,QAAQ,EACtB,QAAQ,MAAM,OAAO,EACrB,QAAQ,OAAO,QAAQ;AAC5B,GAToC;AAW7B,IAAM,iBAAiB,wBAAC,SAAiB,YAA4B;AAC1E,QAAM,QAAQ;AACd,SAAO,QAAQ,QAAQ,OAAO,CAAC,WAAW;AACxC,WAAO,IAAI,OAAO,IAAI,OAAO,QAAQ,MAAM,EAAE,CAAC;AAAA,EAChD,CAAC;AACH,GAL8B;AAOvB,IAAM,aAAa,6BAAM,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,GAAG,CAAC,GAA3C;AAEnB,IAAM,aAAa;AAAA;AAAA,EAExB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACtEO,IAAM,MAAM,wBACjB,YACG,WACQ;AACX,QAAM,WAAW,WAAW;AAE5B,QAAM,kBAAkB,OAAO;AAAA,IAAI,CAAC,UAClC,OAAO,UAAU,aAAa,MAAM,EAAE,SAAS,IAAI,MAAM,SAAS;AAAA,EACpE;AAEA,QAAM,SAAS,QACZ,IAAI,CAAC,KAAK,UAAU,GAAG,GAAG,GAAG,gBAAgB,KAAK,KAAK,EAAE,EAAE,EAC3D,KAAK,EAAE;AAEV,QAAM,cAAc,OAAO;AAAA,IACzB;AAAA,IACA,CAAC,OAAO,WAAW,YAAY;AAC7B,UAAI,UAAU,KAAK,EAAE,WAAW,GAAG,GAAG;AACpC,eAAO;AAAA,MACT;AAEA,YAAM,oBAAoB,UACvB,MAAM,GAAG,EACT,IAAI,CAAC,QAAgB,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,EAAE,EAChD,KAAK,IAAI;AAEZ,aAAO,GAAG,iBAAiB,KAAK,OAAO;AAAA,IACzC;AAAA,EACF;AAEA,SAAO;AACT,GA/BmB;",
  "names": []
}
