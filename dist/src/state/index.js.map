{
  "version": 3,
  "sources": ["../../../src/state/createState.ts"],
  "sourcesContent": ["import type { StateWatcher, State, StateManager } from \"./types\";\n\nconst _createUUID = (): string => Math.random().toString(36).substring(2, 11);\n\nexport const createState = <S = unknown>(\n  initialState: State<S>,\n): StateManager<S> => {\n  const _state = JSON.parse(JSON.stringify(initialState));\n  const _watchers = new Set<StateWatcher<S>>();\n\n  const _notifyHandlers = (payload: State<S>) => {\n    for (const stateWatcher of _watchers) {\n      stateWatcher(payload);\n    }\n  };\n\n  const set = (payload: State<S>) => {\n    Object.assign(_state, JSON.parse(JSON.stringify(payload)));\n    _notifyHandlers(JSON.parse(JSON.stringify(_state)));\n  };\n\n  const get = (): State<S> => {\n    return JSON.parse(JSON.stringify(_state));\n  };\n\n  const watch = (callback: StateWatcher<S>) => {\n    _watchers.add(callback);\n  };\n\n  return { set, get, watch };\n};\n"],
  "mappings": "+EAIO,IAAMA,EAAcC,EACzBC,GACoB,CACpB,IAAMC,EAAS,KAAK,MAAM,KAAK,UAAUD,CAAY,CAAC,EAChDE,EAAY,IAAI,IAEhBC,EAAkBJ,EAACK,GAAsB,CAC7C,QAAWC,KAAgBH,EACzBG,EAAaD,CAAO,CAExB,EAJwB,mBAmBxB,MAAO,CAAE,IAbGL,EAACK,GAAsB,CACjC,OAAO,OAAOH,EAAQ,KAAK,MAAM,KAAK,UAAUG,CAAO,CAAC,CAAC,EACzDD,EAAgB,KAAK,MAAM,KAAK,UAAUF,CAAM,CAAC,CAAC,CACpD,EAHY,OAaE,IARFF,EAAA,IACH,KAAK,MAAM,KAAK,UAAUE,CAAM,CAAC,EAD9B,OAQO,MAJLF,EAACO,GAA8B,CAC3CJ,EAAU,IAAII,CAAQ,CACxB,EAFc,QAIW,CAC3B,EA1B2B",
  "names": ["createState", "__name", "initialState", "_state", "_watchers", "_notifyHandlers", "payload", "stateWatcher", "callback"]
}
