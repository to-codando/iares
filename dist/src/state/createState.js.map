{
  "version": 3,
  "sources": ["../../../src/state/createState.ts"],
  "sourcesContent": ["import type { StateWatcher, State, StateManager } from \"./types\";\n\nconst _createUUID = (): string => Math.random().toString(36).substring(2, 11);\n\nexport const createState = <S = unknown>(\n  initialState: State<S>,\n): StateManager<S> => {\n  const _state = JSON.parse(JSON.stringify(initialState));\n  const _watchers = new Set<StateWatcher<S>>();\n\n  const _notifyHandlers = (payload: State<S>) => {\n    for (const stateWatcher of _watchers) {\n      stateWatcher(payload);\n    }\n  };\n\n  const set = (payload: State<S>) => {\n    Object.assign(_state, JSON.parse(JSON.stringify(payload)));\n    _notifyHandlers(JSON.parse(JSON.stringify(_state)));\n  };\n\n  const get = (): State<S> => {\n    return JSON.parse(JSON.stringify(_state));\n  };\n\n  const watch = (callback: StateWatcher<S>) => {\n    _watchers.add(callback);\n  };\n\n  return { set, get, watch };\n};\n"],
  "mappings": ";;;;AAEA,IAAM,cAAc,6BAAc,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE,GAAxD;AAEb,IAAM,cAAc,wBACzB,iBACoB;AACpB,QAAM,SAAS,KAAK,MAAM,KAAK,UAAU,YAAY,CAAC;AACtD,QAAM,YAAY,oBAAI,IAAqB;AAE3C,QAAM,kBAAkB,wBAAC,YAAsB;AAC7C,eAAW,gBAAgB,WAAW;AACpC,mBAAa,OAAO;AAAA,IACtB;AAAA,EACF,GAJwB;AAMxB,QAAM,MAAM,wBAAC,YAAsB;AACjC,WAAO,OAAO,QAAQ,KAAK,MAAM,KAAK,UAAU,OAAO,CAAC,CAAC;AACzD,oBAAgB,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC,CAAC;AAAA,EACpD,GAHY;AAKZ,QAAM,MAAM,6BAAgB;AAC1B,WAAO,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC;AAAA,EAC1C,GAFY;AAIZ,QAAM,QAAQ,wBAAC,aAA8B;AAC3C,cAAU,IAAI,QAAQ;AAAA,EACxB,GAFc;AAId,SAAO,EAAE,KAAK,KAAK,MAAM;AAC3B,GA1B2B;",
  "names": []
}
