{
  "version": 3,
  "sources": ["../../../src/style/createStyleScope.ts"],
  "sourcesContent": ["const splitIntoRules = (css: string): string[] => {\n  return css\n    .split(\"}\")\n    .map((rule) => rule.trim())\n    .filter((rule) => rule.length > 0);\n};\n\nconst parseRule = (rule: string): [string[], string] => {\n  const [selectorPart, declarationPart] = rule\n    .split(\"{\")\n    .map((part) => part.trim());\n  const selectors = selectorPart.split(\",\").map((selector) => selector.trim());\n  const declarations = declarationPart.trim();\n  return [selectors, declarations];\n};\n\nconst prefixSelector = (selector: string, className: string): string => {\n  if (selector.startsWith(\"&\")) {\n    return selector.replace(\"&\", `.${className}`);\n  }\n  return `.${className} ${selector}`;\n};\n\nconst scopeRule = (rule: string, className: string): string => {\n  const [selectors, declarations] = parseRule(rule);\n  const scopedSelectors = selectors.map((selector) =>\n    prefixSelector(selector, className),\n  );\n  return `${scopedSelectors.join(\", \")} { ${declarations} }\\n`;\n};\n\nexport const createStyleScope = (className: string, css: string): string => {\n  return splitIntoRules(css)\n    .map((rule) => scopeRule(rule, className))\n    .reduce((acc, scopedRule) => acc + scopedRule, \"\");\n};\n"],
  "mappings": "+EAAA,IAAMA,EAAiBC,EAACC,GACfA,EACJ,MAAM,GAAG,EACT,IAAKC,GAASA,EAAK,KAAK,CAAC,EACzB,OAAQA,GAASA,EAAK,OAAS,CAAC,EAJd,kBAOjBC,EAAYH,EAACE,GAAqC,CACtD,GAAM,CAACE,EAAcC,CAAe,EAAIH,EACrC,MAAM,GAAG,EACT,IAAKI,GAASA,EAAK,KAAK,CAAC,EACtBC,EAAYH,EAAa,MAAM,GAAG,EAAE,IAAKI,GAAaA,EAAS,KAAK,CAAC,EACrEC,EAAeJ,EAAgB,KAAK,EAC1C,MAAO,CAACE,EAAWE,CAAY,CACjC,EAPkB,aASZC,EAAiBV,EAAA,CAACQ,EAAkBG,IACpCH,EAAS,WAAW,GAAG,EAClBA,EAAS,QAAQ,IAAK,IAAIG,CAAS,EAAE,EAEvC,IAAIA,CAAS,IAAIH,CAAQ,GAJX,kBAOjBI,EAAYZ,EAAA,CAACE,EAAcS,IAA8B,CAC7D,GAAM,CAACJ,EAAWE,CAAY,EAAIN,EAAUD,CAAI,EAIhD,MAAO,GAHiBK,EAAU,IAAKC,GACrCE,EAAeF,EAAUG,CAAS,CACpC,EAC0B,KAAK,IAAI,CAAC,MAAMF,CAAY;AAAA,CACxD,EANkB,aAQLI,EAAmBb,EAAA,CAACW,EAAmBV,IAC3CF,EAAeE,CAAG,EACtB,IAAKC,GAASU,EAAUV,EAAMS,CAAS,CAAC,EACxC,OAAO,CAACG,EAAKC,IAAeD,EAAMC,EAAY,EAAE,EAHrB",
  "names": ["splitIntoRules", "__name", "css", "rule", "parseRule", "selectorPart", "declarationPart", "part", "selectors", "selector", "declarations", "prefixSelector", "className", "scopeRule", "createStyleScope", "acc", "scopedRule"]
}
